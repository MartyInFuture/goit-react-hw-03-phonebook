{"version":3,"sources":["Components/phonebook/PhonebookStyled.js","Components/phonebook/Phonebook.jsx","Components/contacts/contactsList/ContactsListStyled.js","Components/contacts/contactsList/ContactsList.jsx","Components/contacts/ContactsStyled.js","Components/contacts/Contacts.jsx","Components/search/SearchStyled.js","Components/search/Search.jsx","Components/App.js","index.js"],"names":["PhonebookStyled","styled","div","Phonebook","handleSubmit","inputId","handleChange","phoneInputId","phone","name","className","onSubmit","htmlFor","onChange","type","value","id","pattern","title","required","ContactsListStyled","ul","ContactsList","contacts","search","deleteItem","map","includes","onClick","ContactsStyled","Contacts","SearchStyled","Search","onSearch","length","INITIAL_STATE","App","state","uuidv4","e","preventDefault","find","item","alert","setState","addToLocalStore","target","index","indexOf","prev","splice","undefined","localStorage","this","JSON","parse","setItem","stringify","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAEaA,EAAkBC,IAAOC,IAAV,6K,OCwCbC,EAtCG,SAAC,GAOZ,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KAEA,OACE,eAACT,EAAD,WACE,2CACA,uBAAMU,UAAU,OAAOC,SAAUP,EAAjC,UACE,uBAAOQ,QAASP,EAAhB,kBACA,uBACEQ,SAAUP,EACVQ,KAAK,OACLL,KAAK,OACLM,MAAON,EACPO,GAAIX,EACJY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,uBAAOP,QAASL,EAAhB,mBACA,uBACEM,SAAUP,EACVQ,KAAK,OACLL,KAAK,QACLO,GAAIT,EACJQ,MAAOP,EACPW,UAAQ,IAEV,wBAAQL,KAAK,SAAb,gCClCKM,EAAqBnB,IAAOoB,GAAV,2YC0BhBC,EAzBM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACxC,OACE,cAACL,EAAD,UACGG,EAASG,KAAI,YAA0B,IAAvBV,EAAsB,EAAtBA,GAAIP,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,MACzB,QAAKC,EAAKkB,SAASH,IAEjB,qBAAad,UAAU,OAAvB,UACE,oBAAGA,UAAU,OAAb,UACGD,EADH,KACWD,KAEX,wBACEE,UAAU,gBACVI,KAAK,SACLC,MAAOC,EACPY,QAASH,EAJX,sBAJOT,SCPNa,EAAiB5B,IAAOC,IAAV,4GCcZ4B,EAZE,SAAC,GAAsC,IAApCP,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACpC,OACE,cAACI,EAAD,UACE,cAAC,EAAD,CACEN,SAAUA,EACVC,OAAQA,EACRC,WAAYA,OCRPM,EAAe9B,IAAOC,IAAV,4GCeV8B,EAfA,SAAC,GAA4B,IAA1BT,EAAyB,EAAzBA,SAAUU,EAAe,EAAfA,SAC1B,OACE,cAACF,EAAD,UACuB,IAApBR,EAASW,OACR,4CAEA,qCACE,uDACA,uBAAOxB,UAAU,SAASI,KAAK,OAAOD,SAAUoB,UCJpDE,EAAgB,CACpB3B,MAAO,GACPC,KAAM,IAwFO2B,E,4MApFbC,MAAQ,CACNd,SAAU,GACVlB,QAASiC,cACT/B,aAAc+B,cACdd,OAAQ,GACRf,KAAM,GACND,MAAO,I,EAYTJ,aAAe,SAACmC,GAEd,GADAA,EAAEC,iBACE,EAAKH,MAAMd,SAASkB,MAAK,SAACC,GAAD,OAAUA,EAAKjC,OAAS,EAAK4B,MAAM5B,QAE9D,OADAkC,MAAM,kBAAD,OAAmB,EAAKN,MAAM5B,KAA9B,oBACE,EAGT,EAAKmC,SAAL,aAEIrB,SAAS,GAAD,mBACH,EAAKc,MAAMd,UADR,CAEN,CAAEd,KAAM,EAAK4B,MAAM5B,KAAMO,GAAIsB,cAAU9B,MAAO,EAAK6B,MAAM7B,UAExD2B,GAEL,EAAKU,kB,EAITvC,aAAe,SAACiC,GAAO,IAAD,EACpB,EAAKK,UAAL,mBACGL,EAAEO,OAAOrC,KAAO8B,EAAEO,OAAO/B,OAD5B,cAEGwB,EAAEO,OAAOrC,KAAO8B,EAAEO,OAAO/B,OAF5B,K,EAMFU,WAAa,SAACc,GACZ,IAAMQ,EAAQ,EAAKV,MAAMd,SAASyB,QAChC,EAAKX,MAAMd,SAASkB,MAAK,SAACC,GAAD,OAAUA,EAAK1B,KAAOuB,EAAEO,OAAO/B,UAE1D,EAAK6B,UAAS,SAACK,GAEb,OADAA,EAAK1B,SAAS2B,OAAOH,EAAO,GACrB,CACLxB,SAAS,YAAK0B,EAAK1B,aAEpB,EAAKsB,kB,EAGVZ,SAAW,SAACM,GACV,EAAKK,SAAS,CAAEpB,OAAQe,EAAEO,OAAO/B,S,uDAhDnC,WACE,QAA8BoC,IAA1BC,aAAa7B,SAAwB,OAAO,EAChD8B,KAAKT,SAAS,CAAErB,SAAU+B,KAAKC,MAAMH,aAAa7B,c,6BAGpD,WACE6B,aAAaI,QAAQ,WAAYF,KAAKG,UAAUJ,KAAKhB,MAAMd,a,oBA6C7D,WACE,OACE,gCACE,cAAC,EAAD,CACEnB,aAAciD,KAAKjD,aACnBC,QAASgD,KAAKhB,MAAMhC,QACpBC,aAAc+C,KAAK/C,aACnBC,aAAc8C,KAAKhB,MAAM9B,aACzBC,MAAO6C,KAAKhB,MAAM7B,MAClBC,KAAM4C,KAAKhB,MAAM5B,OAEnB,0CAEA,cAAC,EAAD,CAAQwB,SAAUoB,KAAKpB,SAAUV,SAAU8B,KAAKhB,MAAMd,WACtD,cAAC,EAAD,CACEA,SAAU8B,KAAKhB,MAAMd,SACrBC,OAAQ6B,KAAKhB,MAAMb,OACnBC,WAAY4B,KAAK5B,oB,GA9ETiC,aCNlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d830da3c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PhonebookStyled = styled.div`\r\n  width: 300px;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  .form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { PhonebookStyled } from './PhonebookStyled';\r\n\r\nconst Phonebook = ({\r\n  handleSubmit,\r\n  inputId,\r\n  handleChange,\r\n  phoneInputId,\r\n  phone,\r\n  name,\r\n}) => {\r\n  return (\r\n    <PhonebookStyled>\r\n      <h2>Phonebook</h2>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label htmlFor={inputId}>Name</label>\r\n        <input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id={inputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor={phoneInputId}>Phone</label>\r\n        <input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"phone\"\r\n          id={phoneInputId}\r\n          value={phone}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </PhonebookStyled>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  inputId: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  phoneInputId: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsListStyled = styled.ul`\r\n  padding-left: 0px;\r\n  list-style: inside;\r\n\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0px 10px;\r\n\r\n    border: 1px solid grey;\r\n  }\r\n\r\n  .item:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .text {\r\n    padding: 0px;\r\n  }\r\n\r\n  .submit-button {\r\n    margin-left: 10px;\r\n    height: 22px;\r\n  }\r\n`;\r\n","import { ContactsListStyled } from './ContactsListStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, search, deleteItem }) => {\r\n  return (\r\n    <ContactsListStyled>\r\n      {contacts.map(({ id, name, phone }) => {\r\n        if (!name.includes(search)) return false;\r\n        return (\r\n          <li key={id} className=\"item\">\r\n            <p className=\"text\">\r\n              {name}: {phone}\r\n            </p>\r\n            <button\r\n              className=\"submit-button\"\r\n              type=\"button\"\r\n              value={id}\r\n              onClick={deleteItem}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  search: PropTypes.string,\r\n  deleteItem: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsStyled = styled.div`\r\n  width: 300px;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  margin: 10px;\r\n`;\r\n","import ContactsList from './contactsList/ContactsList';\r\nimport { ContactsStyled } from './ContactsStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, search, deleteItem }) => {\r\n  return (\r\n    <ContactsStyled>\r\n      <ContactsList\r\n        contacts={contacts}\r\n        search={search}\r\n        deleteItem={deleteItem}\r\n      />\r\n    </ContactsStyled>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onSearch: PropTypes.func,\r\n  search: PropTypes.string,\r\n  deleteItem: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchStyled = styled.div`\r\n  width: 300px;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  margin: 10px;\r\n`;\r\n","import { SearchStyled } from './SearchStyled';\r\n\r\nconst Search = ({ contacts, onSearch }) => {\r\n  return (\r\n    <SearchStyled>\r\n      {contacts.length === 0 ? (\r\n        <p>No contacts</p>\r\n      ) : (\r\n        <>\r\n          <h3>Find contacts by name</h3>\r\n          <input className=\"search\" type=\"text\" onChange={onSearch} />\r\n        </>\r\n      )}\r\n    </SearchStyled>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Phonebook from './phonebook/Phonebook';\r\nimport Contacts from './contacts/Contacts';\r\nimport Search from './search/Search';\r\n\r\nconst INITIAL_STATE = {\r\n  phone: '',\r\n  name: '',\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    inputId: uuidv4(),\r\n    phoneInputId: uuidv4(),\r\n    search: '',\r\n    name: '',\r\n    phone: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.contacts === undefined) return false;\r\n    this.setState({ contacts: JSON.parse(localStorage.contacts) });\r\n  }\r\n\r\n  addToLocalStore() {\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.contacts.find((item) => item.name === this.state.name)) {\r\n      alert(`User with name ${this.state.name} alredy exist!`);\r\n      return false;\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        contacts: [\r\n          ...this.state.contacts,\r\n          { name: this.state.name, id: uuidv4(), phone: this.state.phone },\r\n        ],\r\n        ...INITIAL_STATE,\r\n      },\r\n      this.addToLocalStore\r\n    );\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  deleteItem = (e) => {\r\n    const index = this.state.contacts.indexOf(\r\n      this.state.contacts.find((item) => item.id === e.target.value)\r\n    );\r\n    this.setState((prev) => {\r\n      prev.contacts.splice(index, 1);\r\n      return {\r\n        contacts: [...prev.contacts],\r\n      };\r\n    }, this.addToLocalStore);\r\n  };\r\n\r\n  onSearch = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Phonebook\r\n          handleSubmit={this.handleSubmit}\r\n          inputId={this.state.inputId}\r\n          handleChange={this.handleChange}\r\n          phoneInputId={this.state.phoneInputId}\r\n          phone={this.state.phone}\r\n          name={this.state.name}\r\n        />\r\n        <h2>Contacts</h2>\r\n\r\n        <Search onSearch={this.onSearch} contacts={this.state.contacts} />\r\n        <Contacts\r\n          contacts={this.state.contacts}\r\n          search={this.state.search}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}